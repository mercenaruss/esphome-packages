#Substitutions
substitutions:
  project_name: "Zigstar.UZG01"
  project_version: "v0.1"
  rx_pin: GPIO36
  tx_pin: GPIO4
  zRST_gpio: GPIO16
  zBSL_gpio: GPIO32
  name: "uzg-01-zigbee"
  friendly_name: "UZG-01-ZigBee"

#Enable OTA
ota:
  password: ${ota_password}

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key
  reboot_timeout: 0s  

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false
  project:
    name: ${project_name}
    version: ${project_version}
  on_boot:
    priority: 600
    then:
      - switch.turn_on: zRST_gpio
      - delay: 15ms
      - switch.turn_off: zRST_gpio

esp32:
  board: esp32dev
  framework:
    type: esp-idf

#Ethernet connection information
ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO17_OUT
  phy_addr: 0

# Logger is enabled
logger:
  level: DEBUG

# Enable WEB
web_server:
  port: 80

# Enable HA Time
time:
  - platform: homeassistant
    id: homeassistant_time

## Safe Mode
button:
- platform: safe_mode
  name: Safe Mode Boot
  entity_category: diagnostic

#External component Stream Server
external_components:
  - source: github://oxan/esphome-stream-server

# Extra sensor to keep track of gateway uptime
text_sensor:
  - platform: template
    entity_category: diagnostic
    disabled_by_default: true
    name: "Uptime"
    lambda: |-
      uint32_t dur = id(uptime_s).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[32];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 60s

#Uptime
sensor:
  - platform: uptime
    id: uptime_s
    update_interval: 60s
  - platform: stream_server
    connection_count:
      entity_category: diagnostic
      name: Zigbee connections    

# Device functions:
switch:
  - platform: restart
    name: "Gateway Restart"

  - platform: gpio
    pin: ${zRST_gpio}
    id: zRST_gpio
    inverted: yes
    restore_mode: ALWAYS_OFF
  - platform: template
    name: "Zigbee RST"
    icon: mdi:toggle-switch
    id: zRST
    turn_on_action:
      - switch.turn_on: zRST_gpio
      - delay: 15ms
      - switch.turn_off: zRST_gpio
      
  - platform: gpio
    pin: ${zBSL_gpio}
    name: "Zigbee BSL"
    icon: mdi:toggle-switch
    id: zBSL
    inverted: yes
    restore_mode: ALWAYS_OFF
    internal: true
    
  - platform: template
    name: "Firmware Update"
    icon: mdi:cellphone-arrow-down
    turn_on_action:
      - script.execute: fw_update_mode
    turn_off_action:
      - switch.toggle: zRST

#Update CC2652 Firmware
script:
  - id: fw_update_mode
    then:
      - switch.turn_on: zBSL
      - delay: 1s
      - switch.turn_on: zRST_gpio
      - delay: 1s
      - switch.turn_off: zRST_gpio
      - logger.log: "Delaying ~5 seconds for TI chip to be ready"
      - delay: 5s
      - switch.turn_off: zBSL
      - logger.log: "Update with cc2538-bsl tool now!"
      - logger.log: "Usage: cc2538-bsl.py -p socket://ip_or_hostname:6638 -evw firmware.hex"

#UART Settings
uart:
  id: uart_bus
  rx_pin: ${rx_pin}
  tx_pin: ${tx_pin}
  baud_rate: 115200

#Serial Bridge Settings,uncomment #port to change default 6638 TCP port
stream_server:
  uart_id: uart_bus
  id: ss
  port: 6638

mdns:
  services:
    - service: "_zigstargw"
      protocol: "_tcp"
      port: 6638
      txt:
        version: 1.0
        name: ZigStarGW
        radio_type: znp
        baud_rate: 115200
        data_flow_control: software